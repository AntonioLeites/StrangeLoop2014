Strangeloop 2014

FINALE! :)

"Our Shared Joy of Programming"

Presenters:  Carin Meier and Sam Aaron

>> ALEX:  All right, welcome, everybody.  We're just about ready to the final keynote.  The Cardinals game tonight is 7:15, if you haven't grabbed your tickets yet, please be sure to do that immediately following the keynote, or you won't being able to go.  So we won't be here after that.  I will have no way to get it to you.  We might still have a few available for sale, I'm not sure.  I wanted to mention the other organizers who helped me out with this.  Obviously I work on this all year, but a number of other people do, as well, so I know Margo keeno [ph] is down here and Ryan Senior, Bridget Hillyer is over here.  I'm not sure if nick could you an is in the house, but he did all the party work.  He's out working on other things right now.  We've got a fantastic video crew that we've worked with for years and so they've done a great job.  And I want to thank Norma who's been doing the hard at work doing the captioning all day and yesterday.  So we will make those captioning feeds available in some format so they can be crowd-edited into correctness.  From what I've been watching, they're amazingly good, actually, so I don't think they need too much work. 
[Laughter] 
>>What, she messed up my words, didn't she?  I'll watch that later. Sneaky.  So we'll be back next year, September 24 to 26 we'll be back in here and at Union Station, so please watch for that, the call for presentations will be in April and tickets will probably go on sale in late May, something like that, so I've had fantastic time I'm super excited for this final keynote.  I've gotten to know Carin through a variety of professional and other relationship sources in this awesome community that we have of Clojure and open source and things like that and so she submitted this talk actually in the call for preparations, and I said, I went to her and I said, I think this could be a keynote and she kept suggesting things and I kept saying I think you could add more things, you're not thinking crazy enough, so she took it to a few other levels after that.  And I just said yes to everything she asked about, so I'm very much looking forward and we'll be hearing I think a little bit later from Sam Aaron and Jonathan Graham, and I'd like to introduce Carin Meier.
>> CARIN MEIER:  So I'm thrilled to be here and I'm thrilled to be talking about joy, and even more I'm thrilled to be collaborating with Sam Aaron, who you'll see and talk with shortly and Meta-ex and it should be a lot of fun so the way this is going to work is I'm going to talk for a small amount of time and Sam is going to come in and he's going to talk for a small amount of time and then if everything is willing we're going to have live-coded music and dancing robots, but so much stuff could go wrong there's like so many failure points, but it will be fun.  We're all in this together, right?  So let's get started.  So when I meet someone new and they ask me what I do, and I say I'm a software developer, and if they're not, you know, in our community, they kind of look at me and a question comes to their tongues and they say, do you like that?  Maybe followed by isn't that boring?  And I look them straight in the eyes and I say I love it, which kind of confuses them a little bit more, and they usually follow up and say, like why?
>> So I usually follow this up with a question that I ask them.  I ask them, have you ever had flying dreams?  You know like when you're little and when you float up in your dream and all of a sudden you're like oh, my gosh, I'm flying, this is so frigging cool?  Well, that's how I feel when I'm in the zone coding and they'll still look a little bit confused so I'll ask them another question.  Have you ever had one of those dreams where like you finally understand it all?  And a raise of hands.  Anybody had these dreams and then you forget it like right when you wake up?  Has anybody ever like remembered it when they woke up because that would be really cool.  Wow, excellent, excellent.  Nice.  Well, that's how I feel when I finally solve a programming problem.  It's awesome.  And if they're still confused and they're still listening to me and they haven't run away, I tell them about when I was little and like on a summer morning, I was 8 years old and I bicycled as fast as I could to my favorite playground because in this playground near it, there was this grove of trees that was like magical to me.  It was just a magical place full of wonder.  And at that moment, I would look around in the trees and I was utterly convinced that any moment I would see a unicorn.  And that's the same wonder and awe I feel when I'm exploring a new technology.  So all these things are why I love programming so much and together, they're sort of the personal joy of programming.  And yeah, I love it.  But it's fragile, right?  You need to take care of it because it can be diminished.  It can seem like it might disappear, but luckily there are some things that you can do they're common sense that we all know but it's always good to go over them again to take care of your personal joy so one of them of course is take care of yourself.  Get enough sleep.  I know especially after this conference I want to like stay up to 2 or 3 a.m. and look at all the interesting papers and languages that have been presented, but after a few days of that, the rest of my joy gets pretty diminished.  Likewise, you know, take care of yourself, eat good food, exercise, and of course, keep interested and keep learning.  Keep that flame alive and all of you are certainly doing this by attending this wonderful conference.
>> For me, my passion is Clojure, I love Clojure, and I remember when I was first playing with Clojure and also that's quadcopters, which are fabulous, and I up was late one night after the kids were in bed and I was trying to get the quadcopter to send it the EBP commands to actually take off and it took off and I totally wasn't expecting it and I screamed and I was like oh, my gosh, it worked and at that moment, I was flying with the drone.  It was great.
>> So we've talked about things that can keep your joy strong that you have under your control, but sometimes stuff happens that's totally out of your control, right?  Life happens.  Sickness happens.  Illness happens.  Loved ones pass away.  And in fact, I lost a dear friend and colleague and mentor of mine this spring.  And quite frankly, I was devastated.  Joy just totally left the world.  It was gray for me.  Even the Clojure code and the programming that I loved just wasn't there.  And I knew that this was part of the normal grieving process, but it was still really, really hard.
>> And I remember one night I was sitting at the kitchen table again, trying to get interested in something.  And I had the Clojure rebel open and I was trying out this library called overtone which enables you to make music with code in Clojure.
>> And I don't know music at all, I can't read music, I've never played an instrument in my life, but somehow, with code, I was able to make sounds, and even music, and that point, it was like a ray of light, like the joy had finally filtered back into my life again, and I thought this was really fitting because it wasn't the joy -- my joy that reached me, it was a shared joy of the community that came to me in that dark time.  Because overtone is an open source, open source project, created by Jeff Rose and Sam Aaron and they took their joy and they shared it with the community, which was then shared with me, and the fact the song that I finally managed to play, even though I had no musical talent at all was a song from daft punk and that made me smile and cry and it was okay, and it was good and I thought it was fitting also that the person that I was grieving for during that time was Jim Weirich who passed away this spring.  He spoke here at Strangeloop in 2012 so we miss you, Jim.  He was always filled with joy.  He was filled with personal joy, full of wonder and excitement for new things, whether it was Y combinators or robots and he took this joy and he shared his joy with the community, through open source, through teaching, through speaking all over the world and just inspiring other people.  And he was a true caretaker of this shared joy in hour community, he always treated others with kindness and respect.  There were no stupid questions with him.  He enjoyed talking with beginners as well as experts and it didn't even matter to him if you were a programmer.  I remember in the office I'd come back from lunch and he was showing the maintenance worker his drone that he was working on and explaining the whole library, it truly didn't matter.  He was sharing his joy with everyone.  Sharing joy increases it.  But it also binds us together as a community.  This is why we are all here.  And it lifts us up in times where we need help or we're just in a dark place.  But most importantly, it makes us more than ourselves.  So I would like to say thank you.  I'd like to say thank you for being part of the community that I love so much.  And I urge you all to keep it strong with joy, love, respect and kindness and of course, music, robots and unicorns.  So I'm going to turn it over to Sam now, and I might be hooking up some robots while he's talking.
>>
     SAM AARON:  Hello, hello.  What a beautiful talk.  I don't know how to move on from there.  I'm going to stand over here.  Maybe that might make me better.  Hello, I'm Sam Aaron and here he's my slides and where are we?  There we are, I need to stay over here.  So you might know me as one of the guys who created overtone.  Anyone here ever used overtone.  That's amazing thank you very much.  Thank you.  It's beautiful and when we talk about sharing our joy of programming a lot of my joy from programming comes exactly from hearing people using my software.  And it's a really beautiful thing and it inspires me to carry on.  And one of the ways I'm trying to encourage people to use the kinds of things I'm doing, like the main joy for me is promoting and communicating the creativity that you can have when you can code.  The new things that we can do, not just coding is for apps and websites, which is something we hear all the time an as professionals, that's probably where we get most of our sort of employment from, but as we know, coding is so much more than apps and websites, right?  And so what could it be?  It could be a new form of interacting with music, so this is me and Jonathan, we're Meta-ex, we're performing here this is a photo of us performing just a couple of nights ago and you can see we've got the code behind us projected we've got these crazy devices that are the persistent data structures backing there.  Every time you push a button the event pushes an immutable list of all the other buttons you've touched and you can actually say what's happened before and I'm going to do something new based on that so really cool stuff and what we're trying to do is communicate the newness, the exciting things you can do with coding that no one understands.  That's not just to you guys, I mean it is clearly to you guys but it's to everybody else because I find it so frustrating when I try to talk to people about programming and as Carin was saying, so here we are we actually perform in musical venues and festivals and people are going I never realized coding could make music.  And this is a problem.  But the other problem is like this is really complicated.  This is the kind of setup we use and I'm happy with this this is this crazy e-max thing I wrote.  It's really hard to read the text with those things moving around, but it looks awesome so that's why I'm doing it, so this is the whole deal, right?  And so but if we're trying to share the joy of coding with more people this is inspiring them potentially of what they do do but it's not what they're doing now.  We want to make the path to get where they want to go as easily as possible.  This is where the raspberry pie came in.  Is there any chance you could make this thing for the raspberry pie, I'm thinking crikey, that's going to be tough.  So I ported overtone and it took it 7 minutes to boot.  And I thought that's not going to fly and I had to rewrite some things and it had to also be something that was useful in a classroom, so how do we provide an environment that can do something like this in this kind of environment and that's tough, right, it's not just about is it easy to use, it's also can I get a buy-in from teachers?  Do teachers actually think valuable to teach?  Well, no.  But again I've got a Trojan horse I'll show you in a second it's really awesome.  Which will get you to understand it.  And there are all these political issues about programming languages and what's the appropriate one and what's good for apps and websites and all this nonsense.  Yes, this raspberry pie is a very small cheap computer, it's like $35, it's a complete Linux box and you plug it into your television and a mouse and you've got a full computer and so it's amazing so it's very, very low powered so what you can do is limited so it keeps you honest as a programmer.  So I built this thing called sonic pi, new curriculum in schools which is going to start now so we're going to teach the whole way across from small children up to just before university computer science so that's causing a real problem with teachers IT teachers are skilled in teaching office skills which is kind of useful but it's not what we want to teach them.  It's not programming.  It's not understanding that they can make the computer do what they want with it.  It's just using the tool for emails and spreadsheets and logo design so I have a scheme of works, this is a lesson plan for teaching introductory computer signs using the sonic pi system and I'll get to what you what sonic pi is in a moment but once I've built that and once I'd used it teachers were using it and it was enjoyable.  The problem was as a system for coding music it was absolutely awful.  It just made these bleeps and beeps.  You could use threads, I taught threads to get things like the baseline and the melody at the same time.  But again, while you could use threads they were totally diabolical.  It's fun for teachers to use and kids to play with but it's not something I'd want to use in a performance.  So I sort of embarking on thinking how we can expand sonic pi so one of the things we did did is get some money from the Arts Council.  The UK has something called the Arts Council.  So we applied this and we got these artists to engage to learn how to program, they're all like really top professional artists in the UK and they were using sonic pi.  A couple of examples, Rob Smith, he did a very nice project where he used a camera in the raspberry pie to take the photo and then played the audio into speakers and wrote a little program to then turn it back into a picture.  You can see in the right a very pixilated gray scale image of trees, for us that's not very exciting but for everybody else in the world it's amazing, how do you turn the picture into sounds and the sounds into picture.  And it's all clearly obvious to us but these are the things we miss when we try and communicate to other people the importance of this and the value and the benefits of being able to see information as the conduit, and new ways to communicate, new kinds of information.  Another beautiful thing is Kate.  She was really struggling for a long time and she -- the most artistic thing she was doing with this raspberry pi is she realized it got really hot and she said what can I do with this, I can melt chocolate and she put it on a bar of chocolate and she melted chocolate, it was a sign of frustration.  The then she came around and she did this which is a live coded performance, she was writing event handlers, which were responding to her key presses which then played sounds of key presses and she was banging on the keyboard really hard and the sound came back with more key presses based on the events and as she this performance evolved in this very beautiful thing and she'd never coded before and here she was doing a live coded performance in front of a whole bunch of people as her artistic outcome.  I thought that was a really beautiful thing.  Then we applied for a whole ton of money, like 130,000 pounds and we got it.  Sonic pi which was also installed in all the raspberry pi's which was really cool.  And I thought how can.  Can we use it not just to teach computer science in schools can we use computing to teach music, can programming languages be a bona fide musical instrument in schools and so I created this thing called sonic pi which I'll show you.  I also have a Mac version.  It looks absolutely identical in the raspberry pie.  This is a very basic app.  You can see I've got a documentation.  All kinds of tools.  You can attack things with decays and phasing in and all kinds of envelope stuff.  This explains what's going on.  And the simplest program you can write, that's pretty cool, but let's get rid of this.  Is like this if we can make a sound.  Can you hear that?  I can't hear it at all.  So I trust I can hear it.  Can we turn the sound up at all, is that possible?  Right, OK, right, so you can press play 50 and that's the first program that's the hello world of sonic pi.  You don't have to do project creation or any of that kind of nonsense or create a class or substantiate something no, you just write the word play and 50 and you can make it bigger if you want and a you're done.  You can say sleep for 0.5 seconds and then play 62, wicked we're in.  This is enough to do most of person notation.  Like time is when to play the notes and pitch is how high and with these two things you can go absolutely nuts.  Kids will do play, sleep for hours.  Maybe I can loop this guy.  And you can start doing loops going around in like a circle and you can actually hear that 62 is played at the same time as 50.  So if you want to make them separated put another sleep in.  There we are, off you go.  And they can also play samples like this is a cool one.  See, it's very quiet, I'm sorry, I don't know how to make it louder.  Oh, thank you very much, louder, that's good.  We want louder.  So they can play that and they can also splay the rate.  So that's like drawn base.  What about hip-hop, old school early hip-hop.  And then want to do like Abba or something, just do 1.5.  Now we're off.  So they're what the hell, so you can talk about the importance of that, because the other thing is if you try and get kids engaged they're engaged you say right, we're going to make a game in python and they go that's amazing we can do that we can make a game?  And you say yes, I'm a programmer, I could show you how to do this and you say, what kind of game do you want?  And they say right, I'm on a horse and I'm looking down the hill in the castle and I've got my army behind it and we're going to storm it and I'm going to plan the strategies.
>> And you think, well I can do you a circle, that's the horse.  And you think and when I was a kid, that was amazing, like whoa, but today with an XBox it's not going to happen.  So if you do this guy, like loop, sample or men, amen, sample duration of loop amen.  Oh, I'll show you something in a second.  And:  Now we got a loop so that's really quite fun.  What happens if you do minus 1?  Backwards, but then the cool thing is you can put some random station in here.  So it's either minus 1 or 1 or .05.  And let's choose those guise.  We're already getting something that sounds a bit interesting but we all know there's two things missing beings the first thing is that all music needs reverb.  So to get reverb, we need to say so wrap whatever code you want with this stuff and you say right correctly.  So now we've got reverb, and of course we need some bass, so let's get some sample bass.  7 lines of code.  7 lines of code, right?  You haven't seen it yet, so how long have I got, Carin, to talk?  Maybe two more minutes.  So in the house sample there are some examples.  Like you can do blue Monday by new order.  So like blue Monday is like the drums, 1, 2, 3, 4, 5 ... and then a snare and there are some notes.  So the cool thing while this is playing, you're going to be happy with that, so I can start modifying this stuff.  So next time round, that's quite nice.  What about version 120, so next time it's going to ... ... ... and now we're going to modulate between the two notes twice as fast.  Put some randomization in here.  All right, I need to actually put this as a lambda.
>> It ... ...  See it's moving around now.  All right, enough of that.  And another one which is quite fun is this driving pulse.  This is like the closest I've got so sort of like def punk like stones.  Again I can sort of change it.
>> Now, the cool thing about this is what I'm showing you here is quite fun.  I've taught all the constructs in here to 12-year-old children in 6 weeks.  So there's nothing here that 12-year-olds can't do after 6 lessons of work.
>> We get some echo.  That's nice.  I could keep going for ages.  I'm on a train, right, going to London and I do just do that for the whole journey.  No, seriously honestly this is a beautiful thing that's available to you now, like you can if you want to, on the train just chill out and make some music.  It's a beautiful thing, really it's beautiful.
>> Sorry for stopping you for that.  Ocean sounds.  And then I'll just finish on this.  Some tron bike sounds going on top of it.
>> Tron bikes and 60 lines of code:
>> Is that fun, right?  You can download this now.  I'll give you URL if you email me.  I was going to make a website which I've made but I haven't actually put it online yet so you'll be able to easily download it very soon if you want to play with this.  Now, just to finish off, how long did I got, Carin?  Two minutes, one minute, no time?  Go, slides, right, workshop me in the junction which is like a Cambridge environment.  We've got 60 kids programming we taught them how to code in a week.  This is actually jamming on stage.  Battling and batting and groups of them could battle and they had a loads of fun and it was joyful.  So you've got these kids here piping guitars into a laptop and this girl here is modifying and changing in real time.  They hadn't done this a week before.  This ladder was just fantastic and we've got live coding we're sonic pioneers.
>> And the final before I stop now is that we're not at all anywhere near complete in this journey because when I gave the first lessons to the schools, the whole class gave me this beautiful card with lots of thank yous and one of them was thank you for making dull lifeless computers interesting and almost reality.  Right?  I don't know why you're clapping.  I don't know why you're clapping because this is depressing.  Why is it people think this is the starting point?  Right clearly for us it's not dull and lifeless, but for other people, even after lessons in music in schools, which is like crazy cool they still think it's dull and lifeless is your mission, my mission is to change people's perspective of what computing is to not make it dull and lifeless, but to make it badass.  So we're going to demonstrate how badass computing is with this new thing.  Oh, crikey, am I going to have to strip off, change gears?  My programmer t-shirt.
>> OK.
>> We've got to get Jonathan onstage.
>> OK, great.  Wait, wait, we have to unveil the surprise.  Try and get this, the surprise the, the thing.
>> You ready for it?  OK, so this, this is Craig.  Craig and Dara?  Where is he?
>> I'm right here.  Wait, wait, wait for it.  It's going to be awesome.
>> No expenses spared.
>> Look at that.  Look at that.  He made that.  It's awesome.  OK, so Meta-ex they're an awesome, awesome, live coding band and if you haven't heard them, they're playing at the city museum the other night, so they do code, Clojure code, and they generate music from the code, so the way it works is they're both jacked into the REPL process creating the sounds they're going to ship me off messages in beat and amplitude and then I have semi-core grow graphed moves but I'm still live REPL giving them the combinations of the robots, so so many points of failure, right?  So we have this sphero, this is one of the robots, communicates via Bluetooth and if er if we're connected to it, we can get it to change color which is totally cool.  My helper, did he havian here is going to catch robots if they roll off the stage.  Thank you so much.  This is a community effort, this really is.  So we also have a Roomba.  Right?  OK?  Let's see, I was connected before, but once I move him he's also connected by Bluetooth.  It's actually a Roo-tooth.  I gets completing messages.
>> What are you getting.
>> Beat 4.
>> What about now.
>> Beat 15.
>> What about 25.  Good it's working good we're in.  So let me see if if I can control the Roomba, too.  The Roomba if he's controlled, will play a note, you couldn't hear it, he can like make music, too, which way not as good as them and then we also have this hexa pod that is like ultra cool.  So if he is -- he can go like, so, yeah, he's way cool and we also have a drone and usually I fly it like without a leash but in this space it's going to be a leash and it's anchored to a water bottle.  Most of the time it holds it, but we'll see.  So.
>> Spread some magic powder on it.
>> Yeah, yeah, we'll keep him over here and we'll bring him over closer to the X when we get going.  OK.  Right.  Oh, wait, wait, wait, I got to get my actions going.  I got to listen to your messages, so you guys are all set up.  Only one more thing.  I've got to so there's an OSC handler that I'm listening to and I am going to tell them to listen to the messages.
>> Do you just want to do like an amplitude to send it to the sphere to make sure he's going?
>> Yeah, sure.
>> 0.5?
>>Ides kind of hard to tell.  Do we have the disco ball going?  We didn't plug it in.  You.
>> It's not a real party is it until the disco ball is going.
>> And some of you have finger lights.  Totally feel free to use it.
>> 3, 2, 1.  OK.  There we go.  It's going crazy fast.
>> All right.  Let's try to do something.  OK, right, we're in.  Jonathan, make some sounds ...
>> Uh-oh, do we have audio?  I hear some sounds.
>> It's coming, it's coming.
>> OK.  ...  Watch out for my drone, don't step on him.  OK he's rolling and flashing with the beat there.
>> That's amazing.
>> Flashing in the amplitude and he's going kind of crazy.  I'm going to stop him ... .
>> What can I say after that?
>> I don't have anything to say.  That was very good.  Thank you all.  Thank you everyone for coming to Strangeloop.  
